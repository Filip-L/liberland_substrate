
//! Autogenerated weights for pallet_federated_bridge
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-06-26, STEPS: `20`, REPEAT: `10`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `kacper-HP-ProBook-445-G7`, CPU: `AMD Ryzen 7 4700U with Radeon Graphics`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: None, DB CACHE: 1024

// Executed Command:
// target/release/substrate
// benchmark
// pallet
// --pallet=pallet_federated_bridge
// --execution=wasm
// --wasm-execution=compiled
// --steps=20
// --repeat=10
// --output=frame/federated-bridge/src/weights.rs
// --extrinsic=*
// --template=./.maintain/frame-weight-template.hbs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use core::marker::PhantomData;

/// Weight functions needed for pallet_federated_bridge.
pub trait WeightInfo {
	fn deposit() -> Weight;
	fn vote_withdraw(r: u32, ) -> Weight;
	fn withdraw(r: u32, ) -> Weight;
	fn set_fee() -> Weight;
	fn set_votes_required() -> Weight;
	fn add_relay(r: u32, ) -> Weight;
	fn remove_watcher(r: u32, ) -> Weight;
	fn remove_relay(r: u32, ) -> Weight;
	fn add_watcher(r: u32, ) -> Weight;
	fn set_state() -> Weight;
	fn emergency_stop(r: u32, ) -> Weight;
	fn set_admin() -> Weight;
	fn set_super_admin() -> Weight;
}

/// Weights for pallet_federated_bridge using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	/// Storage: EthLLDBridge State (r:1 w:0)
	/// Proof: EthLLDBridge State (max_values: Some(1), max_size: Some(1), added: 496, mode: MaxEncodedLen)
	/// Storage: System Account (r:2 w:2)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	fn deposit() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `407`
		//  Estimated: `6196`
		// Minimum execution time: 106_483_000 picoseconds.
		Weight::from_parts(110_711_000, 6196)
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: EthLLDBridge Relays (r:1 w:0)
	/// Proof: EthLLDBridge Relays (max_values: Some(1), max_size: Some(641), added: 1136, mode: MaxEncodedLen)
	/// Storage: EthLLDBridge State (r:1 w:0)
	/// Proof: EthLLDBridge State (max_values: Some(1), max_size: Some(1), added: 496, mode: MaxEncodedLen)
	/// Storage: EthLLDBridge StatusOf (r:1 w:1)
	/// Proof: EthLLDBridge StatusOf (max_values: None, max_size: Some(53), added: 2528, mode: MaxEncodedLen)
	/// Storage: EthLLDBridge IncomingReceipts (r:1 w:0)
	/// Proof: EthLLDBridge IncomingReceipts (max_values: None, max_size: Some(104), added: 2579, mode: MaxEncodedLen)
	/// Storage: EthLLDBridge Voting (r:1 w:1)
	/// Proof: EthLLDBridge Voting (max_values: None, max_size: Some(689), added: 3164, mode: MaxEncodedLen)
	/// Storage: EthLLDBridge VotesRequired (r:1 w:0)
	/// Proof: EthLLDBridge VotesRequired (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// The range of component `r` is `[1, 20]`.
	fn vote_withdraw(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `410 + r * (64 ±0)`
		//  Estimated: `4154`
		// Minimum execution time: 54_715_000 picoseconds.
		Weight::from_parts(60_668_013, 4154)
			// Standard Error: 76_388
			.saturating_add(Weight::from_parts(165_777, 0).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: EthLLDBridge Voting (r:1 w:0)
	/// Proof: EthLLDBridge Voting (max_values: None, max_size: Some(689), added: 3164, mode: MaxEncodedLen)
	/// Storage: EthLLDBridge State (r:1 w:0)
	/// Proof: EthLLDBridge State (max_values: Some(1), max_size: Some(1), added: 496, mode: MaxEncodedLen)
	/// Storage: EthLLDBridge StatusOf (r:1 w:1)
	/// Proof: EthLLDBridge StatusOf (max_values: None, max_size: Some(53), added: 2528, mode: MaxEncodedLen)
	/// Storage: EthLLDBridge IncomingReceipts (r:1 w:0)
	/// Proof: EthLLDBridge IncomingReceipts (max_values: None, max_size: Some(104), added: 2579, mode: MaxEncodedLen)
	/// Storage: EthLLDBridge WithdrawalCounter (r:1 w:1)
	/// Proof: EthLLDBridge WithdrawalCounter (max_values: Some(1), max_size: Some(20), added: 515, mode: MaxEncodedLen)
	/// Storage: EthLLDBridge Fee (r:1 w:0)
	/// Proof: EthLLDBridge Fee (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	/// Storage: System Account (r:2 w:2)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// The range of component `r` is `[1, 20]`.
	fn withdraw(_r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `636 + r * (32 ±0)`
		//  Estimated: `6196`
		// Minimum execution time: 117_755_000 picoseconds.
		Weight::from_parts(140_113_979, 6196)
			.saturating_add(T::DbWeight::get().reads(8_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
	/// Storage: EthLLDBridge Admin (r:1 w:0)
	/// Proof: EthLLDBridge Admin (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
	/// Storage: EthLLDBridge Fee (r:0 w:1)
	/// Proof: EthLLDBridge Fee (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	fn set_fee() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `228`
		//  Estimated: `1517`
		// Minimum execution time: 11_371_000 picoseconds.
		Weight::from_parts(11_783_000, 1517)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: EthLLDBridge SuperAdmin (r:1 w:0)
	/// Proof: EthLLDBridge SuperAdmin (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
	/// Storage: EthLLDBridge VotesRequired (r:0 w:1)
	/// Proof: EthLLDBridge VotesRequired (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	fn set_votes_required() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `251`
		//  Estimated: `1517`
		// Minimum execution time: 12_624_000 picoseconds.
		Weight::from_parts(12_935_000, 1517)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: EthLLDBridge SuperAdmin (r:1 w:0)
	/// Proof: EthLLDBridge SuperAdmin (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
	/// Storage: EthLLDBridge Relays (r:1 w:1)
	/// Proof: EthLLDBridge Relays (max_values: Some(1), max_size: Some(641), added: 1136, mode: MaxEncodedLen)
	/// The range of component `r` is `[1, 19]`.
	fn add_relay(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `255 + r * (32 ±0)`
		//  Estimated: `2126`
		// Minimum execution time: 16_151_000 picoseconds.
		Weight::from_parts(17_046_853, 2126)
			// Standard Error: 9_588
			.saturating_add(Weight::from_parts(73_148, 0).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: EthLLDBridge SuperAdmin (r:1 w:0)
	/// Proof: EthLLDBridge SuperAdmin (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
	/// Storage: EthLLDBridge Watchers (r:1 w:1)
	/// Proof: EthLLDBridge Watchers (max_values: Some(1), max_size: Some(641), added: 1136, mode: MaxEncodedLen)
	/// The range of component `r` is `[1, 20]`.
	fn remove_watcher(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `255 + r * (32 ±0)`
		//  Estimated: `2126`
		// Minimum execution time: 15_970_000 picoseconds.
		Weight::from_parts(16_896_792, 2126)
			// Standard Error: 10_227
			.saturating_add(Weight::from_parts(91_991, 0).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: EthLLDBridge Admin (r:1 w:0)
	/// Proof: EthLLDBridge Admin (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
	/// Storage: EthLLDBridge SuperAdmin (r:1 w:0)
	/// Proof: EthLLDBridge SuperAdmin (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
	/// Storage: EthLLDBridge Relays (r:1 w:1)
	/// Proof: EthLLDBridge Relays (max_values: Some(1), max_size: Some(641), added: 1136, mode: MaxEncodedLen)
	/// The range of component `r` is `[1, 20]`.
	fn remove_relay(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `274 + r * (32 ±0)`
		//  Estimated: `2126`
		// Minimum execution time: 18_555_000 picoseconds.
		Weight::from_parts(19_899_157, 2126)
			// Standard Error: 11_477
			.saturating_add(Weight::from_parts(72_957, 0).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: EthLLDBridge Admin (r:1 w:0)
	/// Proof: EthLLDBridge Admin (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
	/// Storage: EthLLDBridge SuperAdmin (r:1 w:0)
	/// Proof: EthLLDBridge SuperAdmin (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
	/// Storage: EthLLDBridge Watchers (r:1 w:1)
	/// Proof: EthLLDBridge Watchers (max_values: Some(1), max_size: Some(641), added: 1136, mode: MaxEncodedLen)
	/// The range of component `r` is `[1, 19]`.
	fn add_watcher(_r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `274 + r * (32 ±0)`
		//  Estimated: `2126`
		// Minimum execution time: 18_715_000 picoseconds.
		Weight::from_parts(21_015_204, 2126)
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: EthLLDBridge Admin (r:1 w:0)
	/// Proof: EthLLDBridge Admin (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
	/// Storage: EthLLDBridge State (r:0 w:1)
	/// Proof: EthLLDBridge State (max_values: Some(1), max_size: Some(1), added: 496, mode: MaxEncodedLen)
	fn set_state() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `228`
		//  Estimated: `1517`
		// Minimum execution time: 18_866_000 picoseconds.
		Weight::from_parts(19_257_000, 1517)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: EthLLDBridge Watchers (r:1 w:0)
	/// Proof: EthLLDBridge Watchers (max_values: Some(1), max_size: Some(641), added: 1136, mode: MaxEncodedLen)
	/// Storage: EthLLDBridge State (r:0 w:1)
	/// Proof: EthLLDBridge State (max_values: Some(1), max_size: Some(1), added: 496, mode: MaxEncodedLen)
	/// The range of component `r` is `[1, 20]`.
	fn emergency_stop(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `213 + r * (32 ±0)`
		//  Estimated: `2126`
		// Minimum execution time: 25_068_000 picoseconds.
		Weight::from_parts(25_774_438, 2126)
			// Standard Error: 10_069
			.saturating_add(Weight::from_parts(9_392, 0).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: EthLLDBridge Admin (r:0 w:1)
	/// Proof: EthLLDBridge Admin (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
	fn set_admin() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 5_541_000 picoseconds.
		Weight::from_parts(5_832_000, 0)
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: EthLLDBridge SuperAdmin (r:0 w:1)
	/// Proof: EthLLDBridge SuperAdmin (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
	fn set_super_admin() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 5_560_000 picoseconds.
		Weight::from_parts(5_841_000, 0)
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
}

// For backwards compatibility and tests
impl WeightInfo for () {
	/// Storage: EthLLDBridge State (r:1 w:0)
	/// Proof: EthLLDBridge State (max_values: Some(1), max_size: Some(1), added: 496, mode: MaxEncodedLen)
	/// Storage: System Account (r:2 w:2)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	fn deposit() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `407`
		//  Estimated: `6196`
		// Minimum execution time: 106_483_000 picoseconds.
		Weight::from_parts(110_711_000, 6196)
			.saturating_add(RocksDbWeight::get().reads(3_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: EthLLDBridge Relays (r:1 w:0)
	/// Proof: EthLLDBridge Relays (max_values: Some(1), max_size: Some(641), added: 1136, mode: MaxEncodedLen)
	/// Storage: EthLLDBridge State (r:1 w:0)
	/// Proof: EthLLDBridge State (max_values: Some(1), max_size: Some(1), added: 496, mode: MaxEncodedLen)
	/// Storage: EthLLDBridge StatusOf (r:1 w:1)
	/// Proof: EthLLDBridge StatusOf (max_values: None, max_size: Some(53), added: 2528, mode: MaxEncodedLen)
	/// Storage: EthLLDBridge IncomingReceipts (r:1 w:0)
	/// Proof: EthLLDBridge IncomingReceipts (max_values: None, max_size: Some(104), added: 2579, mode: MaxEncodedLen)
	/// Storage: EthLLDBridge Voting (r:1 w:1)
	/// Proof: EthLLDBridge Voting (max_values: None, max_size: Some(689), added: 3164, mode: MaxEncodedLen)
	/// Storage: EthLLDBridge VotesRequired (r:1 w:0)
	/// Proof: EthLLDBridge VotesRequired (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// The range of component `r` is `[1, 20]`.
	fn vote_withdraw(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `410 + r * (64 ±0)`
		//  Estimated: `4154`
		// Minimum execution time: 54_715_000 picoseconds.
		Weight::from_parts(60_668_013, 4154)
			// Standard Error: 76_388
			.saturating_add(Weight::from_parts(165_777, 0).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: EthLLDBridge Voting (r:1 w:0)
	/// Proof: EthLLDBridge Voting (max_values: None, max_size: Some(689), added: 3164, mode: MaxEncodedLen)
	/// Storage: EthLLDBridge State (r:1 w:0)
	/// Proof: EthLLDBridge State (max_values: Some(1), max_size: Some(1), added: 496, mode: MaxEncodedLen)
	/// Storage: EthLLDBridge StatusOf (r:1 w:1)
	/// Proof: EthLLDBridge StatusOf (max_values: None, max_size: Some(53), added: 2528, mode: MaxEncodedLen)
	/// Storage: EthLLDBridge IncomingReceipts (r:1 w:0)
	/// Proof: EthLLDBridge IncomingReceipts (max_values: None, max_size: Some(104), added: 2579, mode: MaxEncodedLen)
	/// Storage: EthLLDBridge WithdrawalCounter (r:1 w:1)
	/// Proof: EthLLDBridge WithdrawalCounter (max_values: Some(1), max_size: Some(20), added: 515, mode: MaxEncodedLen)
	/// Storage: EthLLDBridge Fee (r:1 w:0)
	/// Proof: EthLLDBridge Fee (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	/// Storage: System Account (r:2 w:2)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// The range of component `r` is `[1, 20]`.
	fn withdraw(_r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `636 + r * (32 ±0)`
		//  Estimated: `6196`
		// Minimum execution time: 117_755_000 picoseconds.
		Weight::from_parts(140_113_979, 6196)
			.saturating_add(RocksDbWeight::get().reads(8_u64))
			.saturating_add(RocksDbWeight::get().writes(4_u64))
	}
	/// Storage: EthLLDBridge Admin (r:1 w:0)
	/// Proof: EthLLDBridge Admin (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
	/// Storage: EthLLDBridge Fee (r:0 w:1)
	/// Proof: EthLLDBridge Fee (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	fn set_fee() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `228`
		//  Estimated: `1517`
		// Minimum execution time: 11_371_000 picoseconds.
		Weight::from_parts(11_783_000, 1517)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: EthLLDBridge SuperAdmin (r:1 w:0)
	/// Proof: EthLLDBridge SuperAdmin (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
	/// Storage: EthLLDBridge VotesRequired (r:0 w:1)
	/// Proof: EthLLDBridge VotesRequired (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	fn set_votes_required() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `251`
		//  Estimated: `1517`
		// Minimum execution time: 12_624_000 picoseconds.
		Weight::from_parts(12_935_000, 1517)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: EthLLDBridge SuperAdmin (r:1 w:0)
	/// Proof: EthLLDBridge SuperAdmin (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
	/// Storage: EthLLDBridge Relays (r:1 w:1)
	/// Proof: EthLLDBridge Relays (max_values: Some(1), max_size: Some(641), added: 1136, mode: MaxEncodedLen)
	/// The range of component `r` is `[1, 19]`.
	fn add_relay(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `255 + r * (32 ±0)`
		//  Estimated: `2126`
		// Minimum execution time: 16_151_000 picoseconds.
		Weight::from_parts(17_046_853, 2126)
			// Standard Error: 9_588
			.saturating_add(Weight::from_parts(73_148, 0).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: EthLLDBridge SuperAdmin (r:1 w:0)
	/// Proof: EthLLDBridge SuperAdmin (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
	/// Storage: EthLLDBridge Watchers (r:1 w:1)
	/// Proof: EthLLDBridge Watchers (max_values: Some(1), max_size: Some(641), added: 1136, mode: MaxEncodedLen)
	/// The range of component `r` is `[1, 20]`.
	fn remove_watcher(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `255 + r * (32 ±0)`
		//  Estimated: `2126`
		// Minimum execution time: 15_970_000 picoseconds.
		Weight::from_parts(16_896_792, 2126)
			// Standard Error: 10_227
			.saturating_add(Weight::from_parts(91_991, 0).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: EthLLDBridge Admin (r:1 w:0)
	/// Proof: EthLLDBridge Admin (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
	/// Storage: EthLLDBridge SuperAdmin (r:1 w:0)
	/// Proof: EthLLDBridge SuperAdmin (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
	/// Storage: EthLLDBridge Relays (r:1 w:1)
	/// Proof: EthLLDBridge Relays (max_values: Some(1), max_size: Some(641), added: 1136, mode: MaxEncodedLen)
	/// The range of component `r` is `[1, 20]`.
	fn remove_relay(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `274 + r * (32 ±0)`
		//  Estimated: `2126`
		// Minimum execution time: 18_555_000 picoseconds.
		Weight::from_parts(19_899_157, 2126)
			// Standard Error: 11_477
			.saturating_add(Weight::from_parts(72_957, 0).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads(3_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: EthLLDBridge Admin (r:1 w:0)
	/// Proof: EthLLDBridge Admin (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
	/// Storage: EthLLDBridge SuperAdmin (r:1 w:0)
	/// Proof: EthLLDBridge SuperAdmin (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
	/// Storage: EthLLDBridge Watchers (r:1 w:1)
	/// Proof: EthLLDBridge Watchers (max_values: Some(1), max_size: Some(641), added: 1136, mode: MaxEncodedLen)
	/// The range of component `r` is `[1, 19]`.
	fn add_watcher(_r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `274 + r * (32 ±0)`
		//  Estimated: `2126`
		// Minimum execution time: 18_715_000 picoseconds.
		Weight::from_parts(21_015_204, 2126)
			.saturating_add(RocksDbWeight::get().reads(3_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: EthLLDBridge Admin (r:1 w:0)
	/// Proof: EthLLDBridge Admin (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
	/// Storage: EthLLDBridge State (r:0 w:1)
	/// Proof: EthLLDBridge State (max_values: Some(1), max_size: Some(1), added: 496, mode: MaxEncodedLen)
	fn set_state() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `228`
		//  Estimated: `1517`
		// Minimum execution time: 18_866_000 picoseconds.
		Weight::from_parts(19_257_000, 1517)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: EthLLDBridge Watchers (r:1 w:0)
	/// Proof: EthLLDBridge Watchers (max_values: Some(1), max_size: Some(641), added: 1136, mode: MaxEncodedLen)
	/// Storage: EthLLDBridge State (r:0 w:1)
	/// Proof: EthLLDBridge State (max_values: Some(1), max_size: Some(1), added: 496, mode: MaxEncodedLen)
	/// The range of component `r` is `[1, 20]`.
	fn emergency_stop(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `213 + r * (32 ±0)`
		//  Estimated: `2126`
		// Minimum execution time: 25_068_000 picoseconds.
		Weight::from_parts(25_774_438, 2126)
			// Standard Error: 10_069
			.saturating_add(Weight::from_parts(9_392, 0).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: EthLLDBridge Admin (r:0 w:1)
	/// Proof: EthLLDBridge Admin (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
	fn set_admin() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 5_541_000 picoseconds.
		Weight::from_parts(5_832_000, 0)
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: EthLLDBridge SuperAdmin (r:0 w:1)
	/// Proof: EthLLDBridge SuperAdmin (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
	fn set_super_admin() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 5_560_000 picoseconds.
		Weight::from_parts(5_841_000, 0)
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
}
